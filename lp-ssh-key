#!/bin/bash

function ssh_key_load {
    local key=$1
    if [ -z "${key}" ] ; then
        select key in $(lpass ls ssh_keys | cut -d ' ' -f 1 | sed 's/ssh_keys\///' | sed '/^$/d')
        do
            break
        done
    fi
    lpass show --field='Private Key' ssh_keys/${key} | ssh-add - 
}

function _ssh_key_load {
    local cur
    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}

    cnt=0
    for i in $(lpass ls ssh_keys | cut -d ' ' -f 1 | sed 's/ssh_keys\///' | sed '/^$/d'); do
        if [[ $i == ${cur}* ]] ; then
            COMPREPLY[$cnt]=$i
            (( cnt++ ))
        fi
    done 
}

complete -F _ssh_key_load ssh_key_load

function ssh_key_import {
    local key=$1
    local name=$2
    if [ -z "${key}" -o -z "${name}" ] ; then
        echo "usage: ssh_key_import <filename> <name>"
        return
    fi
    if [ ! -z "$(lpass ls ssh_keys/${name})" ] ; then
        echo "Name: ${name} already taken."
        return
    fi
    echo "" | lpass add --sync=now --non-interactive --notes --note-type=ssh-key ssh_keys/${name}
    sleep 5
    cat ${key} | lpass edit --sync=now --non-interactive --field="Private Key" ssh_keys/${name}
    sleep 5
    if [ -f "${key}.pub" ] ; then
        cat ${key}.pub | lpass edit --sync=now --non-interactive --field="Public Key" ssh_keys/${name}
    fi
}
